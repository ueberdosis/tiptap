name: Publish

env:
  PNPM_VERSION: 9.15.4

on:
  push:
    branches:
      - main
      - develop
      - next
  # manual trigger for other branches
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Load turbo cache
        uses: actions/cache@v4.2.3
        id: turbo-cache
        with:
          path: |
            .turbo
            **/.eslintcache
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ github.sha }}
            ${{ runner.os }}-turbo-

      - name: Install Dependencies
        run: pnpm i

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Create Release PR or publish stable version to npm
        id: changesets
        uses: changesets/action@v1
        with:
          createGithubReleases: false
          publish: pnpm run publish
          version: pnpm run version
          title: ${{ github.ref_name == 'main' && 'Publish a new stable version'  || 'Publish a new pre-release version' }}
          commit: >-
            ${{ github.ref_name == 'main' && 'chore(release): publish a new release version'  || 'chore(release): publish a new pre-release version' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          NPM_CONFIG_ACCESS: public

      - name: Send release notification
        if: steps.changesets.outputs.published == 'true'
        id: slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "message": "[Tiptap Editor Release]: New Tiptap Editor version has been released to NPM."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send failure notification
        if: failure()
        id: slack_failure
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "message": "[Tiptap Editor Release]: There was an issue publishing a new version. You can find the logs here: https://github.com/ueberdosis/tiptap/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
